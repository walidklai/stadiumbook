{"ast":null,"code":"import { GET_STADIUMS, FILTER_STADIUMS, GET_MY_STADIUMS, REMOVE_STADIUM, ADD_STADIUM_SUCCESS, ADD_STADIUM_FAILURE, CLEAR_MY_STADIUMS } from \"./actionTypes\";\nimport axios from \"axios\";\nimport { setAlert } from './alertAction';\nexport const getStadiums = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/stadium\");\n    dispatch({\n      type: GET_STADIUMS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const filterStadiums = ({\n  name,\n  value\n}) => dispatch => {\n  dispatch({\n    type: FILTER_STADIUMS,\n    payload: {\n      name,\n      value\n    }\n  });\n};\nexport const getMyStadiums = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/stadium/me\");\n    dispatch({\n      type: GET_MY_STADIUMS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const addStadium = ({\n  name,\n  length,\n  width,\n  governorate,\n  city,\n  street,\n  image,\n  description\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = {\n    name,\n    length,\n    width,\n    governorate,\n    city,\n    street,\n    image,\n    description\n  };\n\n  try {\n    const res = await axios.post('/api/stadium', body, config);\n    dispatch({\n      type: ADD_STADIUM_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data.errors;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    dispatch({\n      type: ADD_STADIUM_FAILURE\n    });\n  }\n};\nexport const removeStadium = id => async dispatch => {\n  try {\n    await axios.delete(`/api/stadium/${id}`);\n    dispatch({\n      type: REMOVE_STADIUM,\n      payload: id\n    });\n    dispatch({\n      type: CLEAR_MY_STADIUMS,\n      payload: id\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Walid klai/desktop/STADIUMBOOK/client/src/redux/actions/stadiumAction.js"],"names":["GET_STADIUMS","FILTER_STADIUMS","GET_MY_STADIUMS","REMOVE_STADIUM","ADD_STADIUM_SUCCESS","ADD_STADIUM_FAILURE","CLEAR_MY_STADIUMS","axios","setAlert","getStadiums","dispatch","res","get","type","payload","data","err","console","log","message","filterStadiums","name","value","getMyStadiums","addStadium","length","width","governorate","city","street","image","description","config","headers","body","post","errors","response","forEach","error","msg","removeStadium","id","delete"],"mappings":"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","sourcesContent":["import {\r\n  GET_STADIUMS,\r\n  FILTER_STADIUMS,\r\n  GET_MY_STADIUMS,\r\n  REMOVE_STADIUM,\r\n  ADD_STADIUM_SUCCESS,\r\n  ADD_STADIUM_FAILURE,\r\n  CLEAR_MY_STADIUMS,\r\n} from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport {setAlert} from './alertAction'\r\n\r\nexport const getStadiums = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/stadium\");\r\n    dispatch({\r\n      type: GET_STADIUMS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const filterStadiums = ({ name, value }) => (dispatch) => {\r\n  dispatch({\r\n    type: FILTER_STADIUMS,\r\n    payload: {\r\n      name,\r\n      value,\r\n    },\r\n  });\r\n};\r\n\r\nexport const getMyStadiums = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/stadium/me\");\r\n    dispatch({\r\n      type: GET_MY_STADIUMS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const addStadium = ({\r\n  name,\r\n  length,\r\n  width,\r\n  governorate,\r\n  city,\r\n  street,\r\n  image,\r\n  description,\r\n}) => async (dispatch) => {\r\n  const config={\r\n    headers:{\r\n      'Content-Type':'application/json'\r\n    }\r\n  }\r\n  const body={\r\n    name,\r\n    length,\r\n    width,\r\n    governorate,\r\n    city,\r\n    street,\r\n    image,\r\n    description\r\n  }\r\n  try {\r\n    const res=await axios.post('/api/stadium',body,config)\r\n    dispatch({\r\n      type:ADD_STADIUM_SUCCESS,\r\n      payload:res.data\r\n    })\r\n    \r\n  } catch (err) {\r\n    console.log(err.message)\r\n    const errors = err.response.data.errors;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    dispatch({\r\n      type: ADD_STADIUM_FAILURE,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeStadium = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/stadium/${id}`);\r\n    dispatch({\r\n      type: REMOVE_STADIUM,\r\n      payload: id,\r\n    });\r\n    dispatch({\r\n      type: CLEAR_MY_STADIUMS,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}