{"ast":null,"code":"import { GET_BOOKING, GET_TIMESLOT, SAVE_BOOKING, REMOVE_BOOKING } from \"./actionTypes\";\nimport axios from \"axios\";\nimport { setAlert } from './alertAction';\nexport const getBookings = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/booking');\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const getBooking = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/booking/mybooking\");\n    dispatch({\n      type: GET_BOOKING,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const getTimeslot = (day, from, to) => dispatch => {\n  dispatch({\n    type: GET_TIMESLOT,\n    payload: {\n      day,\n      from,\n      to\n    }\n  });\n};\nexport const saveBooking = ({\n  from,\n  to,\n  day,\n  id\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = {\n    from,\n    to,\n    day\n  };\n\n  try {\n    const res = await axios.post(`/api/booking/${id}`, body, config);\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const removeBookingData = () => dispatch => {\n  dispatch({\n    type: REMOVE_BOOKING\n  });\n};\nexport const deleteBooking = id => async dispatch => {\n  try {\n    await axios.delete(`/api/booking/${id}`);\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};","map":{"version":3,"sources":["C:/Users/Walid klai/desktop/STADIUMBOOK/client/src/redux/actions/bookingAction.js"],"names":["GET_BOOKING","GET_TIMESLOT","SAVE_BOOKING","REMOVE_BOOKING","axios","setAlert","getBookings","dispatch","res","get","err","console","log","message","getBooking","type","payload","data","errors","response","forEach","error","msg","getTimeslot","day","from","to","saveBooking","id","config","headers","body","post","removeBookingData","deleteBooking","delete"],"mappings":"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","sourcesContent":["import {\r\n  GET_BOOKING,\r\n  GET_TIMESLOT,\r\n  SAVE_BOOKING,\r\n  REMOVE_BOOKING,\r\n} from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport {setAlert} from './alertAction'\r\n\r\nexport const getBookings=()=>async dispatch=>{\r\n  try {\r\n    const res=await axios.get('/api/booking')\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getBooking = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/booking/mybooking\");\r\n    dispatch({\r\n      type: GET_BOOKING,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\nexport const getTimeslot = (day, from, to) => (dispatch) => {\r\n  dispatch({\r\n    type: GET_TIMESLOT,\r\n    payload: {\r\n      day,\r\n      from,\r\n      to,\r\n    },\r\n  });\r\n};\r\n\r\nexport const saveBooking = ({ from,to,day,id }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = {\r\n    from,\r\n    to,\r\n    day\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/booking/${id}`, body, config);\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\nexport const removeBookingData=()=>dispatch=>{\r\n  dispatch({\r\n    type:REMOVE_BOOKING\r\n  })\r\n}\r\n\r\nexport const deleteBooking=(id)=>async dispatch=>{\r\n  try {\r\n    await axios.delete(`/api/booking/${id}`)\r\n  } catch (err) {\r\n    console.log(err.message)\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}