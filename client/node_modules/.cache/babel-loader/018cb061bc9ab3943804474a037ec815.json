{"ast":null,"code":"import { GET_STADIUMS, FILTER_STADIUMS, GET_MY_STADIUMS, REMOVE_STADIUM, ADD_STADIUM_SUCCESS, ADD_STADIUM_FAILURE, GET_SINGLE_STADIUM, GET_MY_STADIUM } from \"./actionTypes\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alertAction\";\nexport const getStadiums = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/stadium\");\n    dispatch({\n      type: GET_STADIUMS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const filterStadiums = ({\n  governorate\n}) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/stadium/${governorate}`);\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const getMyStadiums = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/stadium/me\");\n    dispatch({\n      type: GET_MY_STADIUMS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const addStadium = ({\n  name,\n  length,\n  width,\n  governorate,\n  city,\n  street,\n  image,\n  description\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = {\n    name,\n    length,\n    width,\n    governorate,\n    city,\n    street,\n    image,\n    description\n  };\n\n  try {\n    const res = await axios.post(\"/api/stadium\", body, config);\n    dispatch({\n      type: ADD_STADIUM_SUCCESS,\n      payload: res.data\n    });\n    dispatch(getMyStadiums());\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data.errors;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    dispatch({\n      type: ADD_STADIUM_FAILURE\n    });\n  }\n};\nexport const removeStadium = id => async dispatch => {\n  try {\n    await axios.delete(`/api/stadium/${id}`);\n    dispatch({\n      type: REMOVE_STADIUM,\n      payload: id\n    });\n    dispatch(getMyStadiums());\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const editStadium = ({\n  id,\n  name,\n  length,\n  width,\n  image,\n  governorate,\n  city,\n  street,\n  description\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = {\n    id,\n    name,\n    length,\n    width,\n    image,\n    governorate,\n    city,\n    street,\n    description\n  };\n\n  try {\n    const res = axios.put(`/api/stadium/${id}`, body, config); //dispatch(getMyStadiums())\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data.errors;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const getSingleStadium = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/stadium/${id}`);\n    console.log(res.data);\n    dispatch({\n      type: GET_SINGLE_STADIUM,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data.errors;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};\nexport const getMyStadium = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/stadium/${id}`);\n    dispatch({\n      type: GET_MY_STADIUM,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.message);\n    const errors = err.response.data.errors;\n    if (errors) errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n  }\n};","map":{"version":3,"sources":["C:/Users/Walid klai/desktop/STADIUMBOOK/client/src/redux/actions/stadiumAction.js"],"names":["GET_STADIUMS","FILTER_STADIUMS","GET_MY_STADIUMS","REMOVE_STADIUM","ADD_STADIUM_SUCCESS","ADD_STADIUM_FAILURE","GET_SINGLE_STADIUM","GET_MY_STADIUM","axios","setAlert","getStadiums","dispatch","res","get","type","payload","data","err","console","log","message","errors","response","forEach","error","msg","filterStadiums","governorate","getMyStadiums","addStadium","name","length","width","city","street","image","description","config","headers","body","post","removeStadium","id","delete","editStadium","put","getSingleStadium","getMyStadium"],"mappings":"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","sourcesContent":["import {\r\n  GET_STADIUMS,\r\n  FILTER_STADIUMS,\r\n  GET_MY_STADIUMS,\r\n  REMOVE_STADIUM,\r\n  ADD_STADIUM_SUCCESS,\r\n  ADD_STADIUM_FAILURE,\r\n  GET_SINGLE_STADIUM,\r\n  GET_MY_STADIUM\r\n} from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alertAction\";\r\n\r\nexport const getStadiums = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/stadium\");\r\n    dispatch({\r\n      type: GET_STADIUMS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\nexport const filterStadiums = ({governorate}) => async (dispatch) => {\r\n  try {\r\n    const res=await axios.get(`/api/stadium/${governorate}`)\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n};\r\n\r\nexport const getMyStadiums = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/stadium/me\");\r\n    dispatch({\r\n      type: GET_MY_STADIUMS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\nexport const addStadium = ({\r\n  name,\r\n  length,\r\n  width,\r\n  governorate,\r\n  city,\r\n  street,\r\n  image,\r\n  description,\r\n}) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = {\r\n    name,\r\n    length,\r\n    width,\r\n    governorate,\r\n    city,\r\n    street,\r\n    image,\r\n    description,\r\n  };\r\n  try {\r\n    const res = await axios.post(\"/api/stadium\", body, config);\r\n    dispatch({\r\n      type: ADD_STADIUM_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(getMyStadiums());\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data.errors;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    dispatch({\r\n      type: ADD_STADIUM_FAILURE,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeStadium = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/stadium/${id}`);\r\n    dispatch({\r\n      type: REMOVE_STADIUM,\r\n      payload: id,\r\n    });\r\n    dispatch(getMyStadiums());\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    const errors = err.response.data;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\nexport const editStadium = ({\r\n  id,\r\n  name,\r\n  length,\r\n  width,\r\n  image,\r\n  governorate,\r\n  city,\r\n  street,\r\n  description,\r\n}) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = {\r\n    id,\r\n    name,\r\n    length,\r\n    width,\r\n    image,\r\n    governorate,\r\n    city,\r\n    street,\r\n    description,\r\n  };\r\n  try {\r\n    const res=axios.put(`/api/stadium/${id}`,body,config)\r\n    //dispatch(getMyStadiums())\r\n  } catch (err) {\r\n    console.log(err.message)\r\n    const errors = err.response.data.errors;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n  }\r\n};\r\n\r\n  export const getSingleStadium=(id)=>async dispatch=>{\r\n    try {\r\n      const res=await axios.get(`/api/stadium/${id}`)\r\n      console.log(res.data)\r\n      dispatch({\r\n        type:GET_SINGLE_STADIUM,\r\n        payload:res.data\r\n      })\r\n    } catch (err) {\r\n      console.log(err.message)\r\n      const errors = err.response.data.errors;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n  }\r\n\r\n  export const getMyStadium=(id)=>async dispatch=>{\r\n    try {\r\n      const res=await axios.get(`/api/stadium/${id}`)\r\n      dispatch({\r\n        type:GET_MY_STADIUM,\r\n        payload:res.data\r\n      })\r\n    } catch (err) {\r\n      console.log(err.message)\r\n      const errors = err.response.data.errors;\r\n    if (errors)\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}