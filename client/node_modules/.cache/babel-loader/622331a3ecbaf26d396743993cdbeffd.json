{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Walid klai\\\\desktop\\\\STADIUMBOOK\\\\client\\\\src\\\\components\\\\DaySlot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Collapse, Row, Col, Alert } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getTimeslot } from '../redux/actions/timeslotAction';\n\nconst DaySlot = ({\n  day,\n  getTimeslot\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  let date = new Date();\n  let hours = date.getHours() + 1;\n  let from = hours < 10 ? 10 : hours;\n  from = from % 2 ? from + 1 : from;\n  let todayTimeSlots = [];\n  let futureTimeSlots = [];\n\n  for (let i = from; i < 23; i = i + 2) {\n    todayTimeSlots[i] = {\n      from: from,\n      to: from + 2\n    };\n    from += 2;\n  }\n\n  for (let i = 10; i < 23; i = i + 2) {\n    futureTimeSlots[i] = {\n      from: i,\n      to: i + 2\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      color: \"success\",\n      onClick: toggle,\n      style: {\n        marginBottom: \"1rem\",\n        marginTop: \"1rem\",\n        display: \"flex\",\n        justifyContent: \"space-around\"\n      },\n      children: day.verif ? day.name : day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      isOpen: isOpen,\n      children: day.verif && hours > 22 ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"secondary\",\n        children: \"Sorry , there is not time slots for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : day.verif ? todayTimeSlots.map(el => /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"From \\xA0\\xA0\\xA0\\xA0\", String(el.from), \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"To \\xA0\\xA0\\xA0\\xA0\", String(el.to) === \"24\" ? \"00\" : String(el.to), \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/book\",\n              style: {\n                textDecoration: \"inherit\",\n                color: \"inherit\"\n              },\n              children: \"Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : futureTimeSlots.map((el, i) => /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\"From \\xA0\\xA0\\xA0\\xA0\", el.from, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"To \\xA0\\xA0\\xA0\\xA0\", el.to, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/book\",\n              style: {\n                textDecoration: \"inherit\",\n                color: \"inherit\"\n              },\n              onClick: () => getTimeslot({\n                day: day.name ? day.name : day,\n                from: el.from,\n                to: el.to\n              }),\n              children: \"Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DaySlot, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = DaySlot;\nexport default connect(null, {\n  getTimeslot\n})(DaySlot);\n\nvar _c;\n\n$RefreshReg$(_c, \"DaySlot\");","map":{"version":3,"sources":["C:/Users/Walid klai/desktop/STADIUMBOOK/client/src/components/DaySlot.js"],"names":["React","useState","Button","Collapse","Row","Col","Alert","Link","connect","getTimeslot","DaySlot","day","isOpen","setIsOpen","toggle","date","Date","hours","getHours","from","todayTimeSlots","futureTimeSlots","i","to","marginBottom","marginTop","display","justifyContent","verif","name","map","el","String","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Collapse, Row, Col, Alert } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport {getTimeslot} from '../redux/actions/timeslotAction'\r\n\r\nconst DaySlot = ({ day ,getTimeslot}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  let date = new Date();\r\n  let hours = date.getHours() + 1;\r\n  let from = hours < 10 ? 10 : hours;\r\n  from = from % 2 ? from + 1 : from;\r\n\r\n  let todayTimeSlots = [];\r\n  let futureTimeSlots = [];\r\n  for (let i = from; i < 23; i = i + 2) {\r\n    todayTimeSlots[i] = {\r\n      from: from,\r\n      to: from + 2,\r\n    };\r\n    from += 2;\r\n  }\r\n\r\n  for (let i = 10; i < 23; i = i + 2) {\r\n    futureTimeSlots[i] = {\r\n      from: i,\r\n      to: i + 2,\r\n    };\r\n  }\r\n  return (\r\n    <div>\r\n      <Button\r\n        block\r\n        color=\"success\"\r\n        onClick={toggle}\r\n        style={{\r\n          marginBottom: \"1rem\",\r\n          marginTop: \"1rem\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {day.verif ? day.name : day}\r\n      </Button>\r\n      <Collapse isOpen={isOpen}>\r\n        {day.verif && hours > 22 ? (\r\n          <Alert color=\"secondary\">\r\n            Sorry , there is not time slots for today\r\n          </Alert>\r\n        ) : day.verif ? (\r\n          todayTimeSlots.map((el) => (\r\n            <Row style={{ marginBottom: \"1rem\" }}>\r\n              <Col>From &nbsp;&nbsp;&nbsp;&nbsp;{String(el.from)}:00</Col>\r\n              <Col>\r\n                To &nbsp;&nbsp;&nbsp;&nbsp;\r\n                {String(el.to) === \"24\" ? \"00\" : String(el.to)}:00\r\n              </Col>\r\n              <Col>\r\n                <Button>\r\n                  <Link\r\n                    to=\"/book\"\r\n                    style={{ textDecoration: \"inherit\", color: \"inherit\" }}\r\n                  >\r\n                    Book\r\n                  </Link>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ))\r\n        ) : (\r\n          futureTimeSlots.map((el, i) => (\r\n            <Row style={{ marginBottom: \"1rem\" }}>\r\n              <Col>From &nbsp;&nbsp;&nbsp;&nbsp;{el.from}:00</Col>\r\n              <Col>To &nbsp;&nbsp;&nbsp;&nbsp;{el.to}:00</Col>\r\n              <Col>\r\n                <Button>\r\n                  <Link\r\n                    to=\"/book\"\r\n                    style={{ textDecoration: \"inherit\", color: \"inherit\" }}\r\n                    onClick={()=>getTimeslot({day:day.name?day.name:day,from:el.from,to:el.to})}\r\n                  >\r\n                    Book\r\n                  </Link>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ))\r\n        )}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null,{getTimeslot})(DaySlot);\r\n"]},"metadata":{},"sourceType":"module"}